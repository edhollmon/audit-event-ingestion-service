apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 9092              # in-cluster client port
      targetPort: 9092
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        ports:
          - containerPort: 9092   # client
          - containerPort: 9093   # controller
        env:
          # ---- KRaft (no ZooKeeper) ----
          - name: KAFKA_ENABLE_KRAFT
            value: "yes"
          - name: KAFKA_CFG_NODE_ID
            value: "0"
          - name: KAFKA_CFG_PROCESS_ROLES
            value: "broker,controller"
          - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
            value: "CONTROLLER"

          # ---- Listeners ----
          - name: KAFKA_CFG_LISTENERS
            value: "PLAINTEXT://:9092,CONTROLLER://:9093"
          - name: KAFKA_CFG_ADVERTISED_LISTENERS
            value: "PLAINTEXT://kafka:9092"
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
            value: "PLAINTEXT"

          # ---- Controller quorum (single broker) ----
          # Use localhost so we don't depend on cluster DNS/hairpin for the controller traffic.
          - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
            value: "0@localhost:9093"

          # ---- Persist metadata/logs & keep a fixed cluster ID ----
          - name: KAFKA_CFG_LOG_DIRS
            value: "/bitnami/kafka/data"
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_KRAFT_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                name: kafka-kraft
                key: KAFKA_KRAFT_CLUSTER_ID

        volumeMounts:
          - name: data
            mountPath: /bitnami/kafka

        readinessProbe:
          tcpSocket: { port: 9092 }
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket: { port: 9092 }
          initialDelaySeconds: 20
          periodSeconds: 20

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: kafka
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 2Gi
